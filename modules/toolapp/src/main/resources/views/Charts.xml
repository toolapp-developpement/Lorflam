<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.4.xsd">
  <chart stacked="true" name="chart.invoice.turnover.cust.history"
    title="Customer Turnover history by month (on invoices)"
    onInit="action.account.chart.set.from.to.date.month">
    <search-fields>
      <field type="date" name="fromDate" title="From Date" x-required="true"/>
      <field name="toDate" type="date" title="To Date" x-required="true"/>
    </search-fields>

    <dataset type="sql">

      SELECT
      to_char(_invoice.invoice_date,'yyyy-MM') AS _month_no,
      coalesce(_product._product_type,'other') || ' | ' || _invoice._invoice_user AS product,
      coalesce(SUM(CASE _operation_type
      WHEN 3
      THEN _invoice._turn_over
      WHEN 4 THEN
      -_invoice._turn_over
      END), 00) AS _turn_over
      FROM
      (SELECT
      _invoice.id AS _invoice_id,
      _invoice.operation_type_select AS _operation_type,
      _invoice.invoice_date as invoice_date,
      date_part('mon', _invoice.invoice_date) AS _month,
      _line.ex_tax_total AS _turn_over,
      _line.product AS _line_product,
      _invoice_user.name AS _invoice_user
      FROM
      account_invoice AS
      _invoice
      JOIN
      account_invoice_line AS _line
      ON _line.invoice=_invoice.id
      JOIN
      auth_user as _user
      ON
      _user.id
      = :__user__
      AND _invoice.company = _user.active_company

      JOIN base_partner AS _partner
      ON
      _partner.id = _invoice.partner
      JOIN
      auth_user AS _invoice_user
      ON _invoice_user.id =
      _partner.user_id

      WHERE
      _invoice.status_select = 3
      AND
      _invoice.invoice_date BETWEEN
      DATE(:fromDate) AND DATE(:toDate)
      AND
      (_invoice.operation_type_select=3 OR
      _invoice.operation_type_select=4)

      GROUP BY
      _invoice_id,
      _line_product, _turn_over, _month,
      _invoice_user
      ) AS _invoice

      JOIN

      (SELECT
      _category.code AS _product_type,
      _product.id AS
      _product_id
      FROM
      base_product AS _product
      JOIN
      base_product_category AS _category
      ON
      _product.product_category=_category.id AND _category.name IS NOT NULL) AS _product

      ON
      _invoice._line_product=_product._product_id
      GROUP BY _month_no, _product._product_type,
      _invoice._invoice_user
      ORDER BY
      _month_no, _turn_over DESC


    </dataset>
    <category key="_month_no" type="month" title="Month"/>
    <series key="_turn_over" groupBy="product" type="bar" title="TurnOver" aggregate="sum"/>
    <config name="xFormat" value="MM-YYYY"/>
  </chart>


  <chart stacked="true" name="chart.invoice.prod.qty.sold.history"
    id="chart.invoice.prod.qty.sold.history.custom"
    title="Total Product Qty sold history by month by category"
    onInit="action.account.chart.set.from.to.date.month">
    <search-fields>
      <field type="date" name="fromDate" title="From Date" x-required="true"/>
      <field name="toDate" type="date" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">

      SELECT
      to_char(_invoice._invoice_date,'yyyy-MM') AS _month_no,
      coalesce(_product._product_type,'other') || ' | ' || _invoice._invoice_user AS product,
      coalesce(SUM(_invoice._turn_over), 00) AS
      _turn_over
      FROM
      (SELECT
      _invoice.id AS _invoice_id,
      _invoice.invoice_date AS _invoice_date,
      _line.qty AS _turn_over,
      _line.product AS _line_product,
      _invoice_user.name AS _invoice_user
      FROM
      account_invoice AS _invoice
      JOIN
      account_invoice_line AS
      _line
      ON _line.invoice=_invoice.id
      JOIN
      auth_user AS _user
      ON _user.id =
      :__user__
      AND
      _invoice.company = _user.active_company

      JOIN base_partner AS _partner
      ON
      _partner.id =
      _invoice.partner
      JOIN
      auth_user AS _invoice_user
      ON _invoice_user.id =
      _partner.user_id

      WHERE
      _invoice.status_select = 3
      AND
      _invoice.invoice_date BETWEEN DATE(:fromDate) AND DATE(:toDate)
      AND
      _invoice.operation_type_select=3

      GROUP BY
      _invoice_id, _line_product, _turn_over,
      _invoice_user
      ORDER BY
      _turn_over) AS _invoice

      JOIN

      (SELECT
      _category.code AS _product_type,
      _product.id AS _product_id
      FROM
      base_product AS _product
      JOIN
      base_product_category AS _category
      ON
      _product.product_category=_category.id AND _category.code IS NOT NULL) AS _product

      ON
      _invoice._line_product=_product._product_id

      GROUP BY _month_no, _product._product_type
      ,_invoice._invoice_user
      ORDER BY
      _month_no, _turn_over DESC

    </dataset>
    <category key="_month_no" type="month" title="Month"/>
    <series key="_turn_over" groupBy="product" type="bar" title="No of Units" aggregate="sum"/>
    <config name="xFormat" value="MM-YYYY"/>
  </chart>
</object-views>