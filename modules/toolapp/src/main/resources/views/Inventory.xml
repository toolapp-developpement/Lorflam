<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.4.xsd">
  <form name="inventory-form" title="Inventory" model="com.axelor.apps.stock.db.Inventory"
    id="custom-inventory-form" extension="true">

    <extend target="/">
      <attribute name="onNew" value="inventory.custom.init.onload"/>
    </extend>

    <extend target="//panel[@name='fillInventoryPanel']/field[@name='product']">
      <insert position="after">
        <field name="supplier" domain="self.isSupplier = true"></field>
      </insert>
    </extend>

    <extend target="//panel[@name='fillInventoryPanel']/field[@name='includeObsolete']">
      <insert position="after">
        <spacer colspan="6"/>
      </insert>
    </extend>
  </form>

  <grid id="inventory-line-grid-custome" name="inventory-line-grid" title="Inventory lines"
    model="com.axelor.apps.stock.db.InventoryLine" editable="true" orderBy="product.code"
    edit-icon="true" extension="true">
    <extend target="//field[@name='product']">
      <insert position="after">
        <field name="product.refSupProd"/>
      </insert>
    </extend>
  </grid>

  <action-record model="com.axelor.apps.stock.db.Inventory"
    name="inventory.custom.init.onload">
    <field name="company" expr="eval:__user__.activeCompany"
      if="__user__.activeCompany != null"/>
    <field name="company" expr="eval:__repo__(Company).all().fetchOne()"
      if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().fetch().size == 1"/>
    <field name="plannedStartDateT"
      expr="eval: __config__.app.getTodayDateTime().toLocalDateTime()"/>
    <field name="plannedEndDateT"
      expr="eval: __config__.app.getTodayDateTime().toLocalDateTime().plusDays(1)"/>
    <field name="typeSelect" expr="1"/>
    <field name="stockLocation"
      expr="eval: __repo__(StockLocation).all().filter('self.name =?','LORFLAM').fetchOne()"/>
  </action-record>
</object-views>